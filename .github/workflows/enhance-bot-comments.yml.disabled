name: Enhance Bot Comments

on:
  issue_comment:
    types: [created]

concurrency:
  group: enhance-${{ github.event.issue.number }}
  cancel-in-progress: true

jobs:
  enhance-comments:
    runs-on: ubuntu-latest
    if: |
      github.event.issue.pull_request &&
      (
        contains(github.event.comment.user.login, 'coderabbitai') ||
        contains(github.event.comment.user.login, 'codecov')
      )
      
    steps:
    - name: Process CodeRabbit Comments
      if: contains(github.event.comment.user.login, 'coderabbitai')
      uses: actions/github-script@v7
      with:
        script: |
          const comment = context.payload.comment.body;
          
          // Extrai informa√ß√µes do CodeRabbit
          const summaryMatch = comment.match(/## Summary\s*\n(.*?)(?=\n##|\n---|\n\*\*|$)/s);
          const summary = summaryMatch ? summaryMatch[1].trim() : '';
          
          // Gera prompt estruturado para uso local
          const enhancedPrompt = `
          ## ü§ñ Resumo para Implementa√ß√£o Local
          
          **Baseado na an√°lise do CodeRabbit:**
          
          ${summary}
          
          ### Arquivos Identificados
          ${comment.match(/\`[^`]+\.py\`/g)?.join(', ') || 'Nenhum arquivo espec√≠fico mencionado'}
          
          ### Pr√≥ximos Passos para Terminal Local
          1. Execute: \`pytest\` para verificar testes atuais
          2. Execute: \`black . && flake8 .\` para verificar formata√ß√£o
          3. Analise os pontos levantados pelo CodeRabbit acima
          4. Implemente as corre√ß√µes necess√°rias incrementalmente
          
          ### Comando Sugerido para Claude Code (Terminal)
          Use este contexto para solicitar um plano de implementa√ß√£o detalhado.
          `;
          
          await github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: enhancedPrompt
          });
    
    - name: Process Codecov Comments
      if: contains(github.event.comment.user.login, 'codecov')
      uses: actions/github-script@v7
      with:
        script: |
          const comment = context.payload.comment.body;
          
          // Extrai informa√ß√µes de cobertura
          const coveragePattern = /Coverage decreased.*by ([\d.]+%)/i;
          const coverageMatch = comment.match(coveragePattern);
          
          if (coverageMatch) {
            const enhancedPrompt = `
            ## üìä Alerta de Cobertura de Testes
            
            **Cobertura diminuiu em ${coverageMatch[1]}**
            
            ### Pr√≥ximos Passos
            1. Execute: \`pytest --cov=grimperium --cov-report=html\`
            2. Abra: \`htmlcov/index.html\` para ver relat√≥rio detalhado
            3. Identifique linhas n√£o cobertas
            4. Adicione testes para as funcionalidades descobertas
            
            ### Para Claude Code (Terminal)
            Solicite: "Analise a cobertura de testes e sugira testes adicionais para as √°reas descobertas"
            `;
            
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: enhancedPrompt
            });
          }